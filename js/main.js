'use strict';

class TicTacToe {

	constructor() {
		this._wins = [ // –≤—ã–∏–≥—Ä—ã—à–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
			[0, 1, 2],
			[3, 4, 5],
			[6, 7, 8],
			[0, 3, 6],
			[1, 4, 7],
			[2, 5, 8],
			[0, 4, 8],
			[2, 4, 6],
		];
		this._text = document.querySelector('.win-text'); // —Ç–µ–∫—Å—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
		this._modal = document.getElementById('modal');   // –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
		this._setMove = true;                             // –∫—Ç–æ —Ö–æ–¥–∏—Ç
		this._movesCount = 0;                             // —Ç–µ–∫—É—â–∏–π –Ω–æ–º–µ—Ä —Ö–æ–¥–∞
		this._isVictory = false;                          // –µ—Å–ª–∏ true - –ø–æ–±–µ–¥–∞
		this._cells = document.querySelectorAll('.cell'); // –ø—Å–µ–≤–¥–æ–º–∞—Å—Å–∏–≤ –∫–ª–µ—Ç–æ–∫
		this._cells.forEach(cell => cell.addEventListener('click', event => {
			this._handleMove(event);
		}));

		document.querySelector('.game-restart').addEventListener('click', e => this._handleReset(e));
		document.querySelector('.reset').addEventListener('click', e => this._removeModal(e));


	}


	// –ø–µ—Ä–µ—Ö–æ–¥ —Ö–æ–¥–∞
	_handleMove(event) {
		if (event.target.textContent == '') {
			event.target.textContent = this._setMove ? 'X' : '0';
			this._movesCount++;
			this._setMove = !this._setMove;
			this._handleWin();
		}
	}

	// –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–±–µ–¥—ã
	_handleWin() {
		this._wins.forEach(win => {
			if (this._cells[win[0]].textContent == 'X' && this._cells[win[1]].textContent == 'X' && this._cells[win[2]].textContent == 'X') {
				this._isVictory = true;
				this._text.textContent = 'üçæ –ü–æ–±–µ–¥–∏–ª–∏ –•! üçæ';
				this._declareWinner();
			}
			if (this._cells[win[0]].textContent == '0' && this._cells[win[1]].textContent == '0' && this._cells[win[2]].textContent == '0') {
				this._isVictory = true;
				this._text.textContent = 'üçæ –ü–æ–±–µ–¥–∏–ª–∏ 0! üçæ';
				this._declareWinner();
			}
		});
		this._handleDraw();
	}

	// —Å–±—Ä–æ—Å –∏–≥—Ä—ã
	_handleReset() {
		this._cells.forEach(cell => cell.textContent = '');
		this._movesCount = 0;
		this._isVictory = false;
	}

	// –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∏—á—å—é
	_handleDraw() {
		if (!this._isVictory && this._movesCount == 9) {
			this._text.textContent = 'üçæ –ù–∏—á—å—è! üçæ';
			this._declareWinner();
		}
	}

	// –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
	_declareWinner() {
		this._modal.classList.remove('hidden');
	}

	// —Å–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ, –∑–∞–ø—É—Å–∫–∞–µ—Ç –æ–±–Ω—É–ª–µ–Ω–∏–µ –∏–≥—Ä—ã
	_removeModal() {
		this._modal.classList.add('hidden');
		this._handleReset();
	}
}

const game = new TicTacToe;